package com.vegantravels.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.vegantravels.dao.Criuzes;
import com.vegantravels.dao.Criuzes_TMP;
import com.vegantravels.dao.Cabins_TMP;
import com.vegantravels.dao.Cabins_TMP;
import com.vegantravels.dao.Excursions;
import com.vegantravels.dao.Excursions_TMP;
import com.vegantravels.dao.Guests;
import com.vegantravels.dao.Guests_TMP;

import com.vegantravels.dao.CriuzesDao;
import com.vegantravels.dao.Criuzes_TMPDao;
import com.vegantravels.dao.Cabins_TMPDao;
import com.vegantravels.dao.Cabins_TMPDao;
import com.vegantravels.dao.ExcursionsDao;
import com.vegantravels.dao.Excursions_TMPDao;
import com.vegantravels.dao.GuestsDao;
import com.vegantravels.dao.Guests_TMPDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig criuzesDaoConfig;
    private final DaoConfig criuzes_TMPDaoConfig;
    private final DaoConfig cabins_TMPDaoConfig;
    private final DaoConfig excursionsDaoConfig;
    private final DaoConfig excursions_TMPDaoConfig;
    private final DaoConfig guestsDaoConfig;
    private final DaoConfig guests_TMPDaoConfig;

    private final CriuzesDao criuzesDao;
    private final Criuzes_TMPDao criuzes_TMPDao;
    private final Cabins_TMPDao cabins_TMPDao;
    private final ExcursionsDao excursionsDao;
    private final Excursions_TMPDao excursions_TMPDao;
    private final GuestsDao guestsDao;
    private final Guests_TMPDao guests_TMPDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        criuzesDaoConfig = daoConfigMap.get(CriuzesDao.class).clone();
        criuzesDaoConfig.initIdentityScope(type);

        criuzes_TMPDaoConfig = daoConfigMap.get(Criuzes_TMPDao.class).clone();
        criuzes_TMPDaoConfig.initIdentityScope(type);

        cabins_TMPDaoConfig = daoConfigMap.get(Cabins_TMPDao.class).clone();
        cabins_TMPDaoConfig.initIdentityScope(type);


        excursionsDaoConfig = daoConfigMap.get(ExcursionsDao.class).clone();
        excursionsDaoConfig.initIdentityScope(type);

        excursions_TMPDaoConfig = daoConfigMap.get(Excursions_TMPDao.class).clone();
        excursions_TMPDaoConfig.initIdentityScope(type);

        guestsDaoConfig = daoConfigMap.get(GuestsDao.class).clone();
        guestsDaoConfig.initIdentityScope(type);

        guests_TMPDaoConfig = daoConfigMap.get(Guests_TMPDao.class).clone();
        guests_TMPDaoConfig.initIdentityScope(type);

        criuzesDao = new CriuzesDao(criuzesDaoConfig, this);
        criuzes_TMPDao = new Criuzes_TMPDao(criuzes_TMPDaoConfig, this);
        cabins_TMPDao = new Cabins_TMPDao(cabins_TMPDaoConfig, this);
        excursionsDao = new ExcursionsDao(excursionsDaoConfig, this);
        excursions_TMPDao = new Excursions_TMPDao(excursions_TMPDaoConfig, this);
        guestsDao = new GuestsDao(guestsDaoConfig, this);
        guests_TMPDao = new Guests_TMPDao(guests_TMPDaoConfig, this);

        registerDao(Criuzes.class, criuzesDao);
        registerDao(Criuzes_TMP.class, criuzes_TMPDao);
        registerDao(Cabins_TMP.class, cabins_TMPDao);
        registerDao(Cabins_TMP.class, cabins_TMPDao);
        registerDao(Excursions.class, excursionsDao);
        registerDao(Excursions_TMP.class, excursions_TMPDao);
        registerDao(Guests.class, guestsDao);
        registerDao(Guests_TMP.class, guests_TMPDao);
    }

    public void clear() {
        criuzesDaoConfig.getIdentityScope().clear();
        criuzes_TMPDaoConfig.getIdentityScope().clear();
        cabins_TMPDaoConfig.getIdentityScope().clear();
        cabins_TMPDaoConfig.getIdentityScope().clear();
        excursionsDaoConfig.getIdentityScope().clear();
        excursions_TMPDaoConfig.getIdentityScope().clear();
        guestsDaoConfig.getIdentityScope().clear();
        guests_TMPDaoConfig.getIdentityScope().clear();
    }

    public CriuzesDao getCriuzesDao() {
        return criuzesDao;
    }

    public Criuzes_TMPDao getCriuzes_TMPDao() {
        return criuzes_TMPDao;
    }

    public ExcursionsDao getExcursionsDao() {
        return excursionsDao;
    }

    public Excursions_TMPDao getExcursions_TMPDao() {
        return excursions_TMPDao;
    }

    public GuestsDao getGuestsDao() {
        return guestsDao;
    }

    public Guests_TMPDao getGuests_TMPDao() {
        return guests_TMPDao;
    }

}
